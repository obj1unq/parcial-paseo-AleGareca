import paseo.*
describe "test de una familia que NO pasea" {

//NOTA: Este fixture está incompleto y sirve para comenzar a testear el examen.
//Es a modo de ayuda, pero no es obligatorio respetar este escenario. 
// Puede modificarse tanto como sea necesario.

	var mediaIzquierda = new PrendaIzquierda(desgaste = 1) //elemento de par
	var mediaDerecha = new PrendaDerecha(desgaste = 3)
	var zapatillaIzquierda= new PrendaIzquierda() 
	var zapatillaDerecha=new PrendaDerecha()
	//prenda par, la media izquierda tiene que tener 1 de desgaste, la derecha 3, el abrigo es default 0
    var mediasZoe = new PrendasPares(talle=s, derecha=mediaDerecha,izquierda=mediaIzquierda) 
	
	//prenda par, el izquierdo y derecho tiene los valores default (desgaste 0, abrigo 1)
	var zapatillasZoe = new PrendasPares(talle=s,derecha=zapatillaDerecha,izquierda=zapatillaIzquierda) 
	
	//prenda pesada con 5 de abrigo
	var jeanZoe = new PrendaPesada(talle=s, abrigo=5) 
	
	//prenda liviana con desgaste default: 0
	var remeraZoe = new PrendaLiviana(talle=s) 
	// prenda pesada con desgaste default: 0
	var camperaZoe = new PrendaPesada(talle=s) 

	//un juguete para niños de 5 a 100 anios
	var ukelele = new Juguete(edadMin=5, edadMax=100)
	
	//prenda liviana con un desgaste de 5
	var remeraMilena = new PrendaLiviana(talle=xs, desgaste=5) //prenda liviana
	//prenda liviana con desgaste default: 0
	var calzaMilena = new PrendaLiviana(talle=xs) //prenda liviana
	var ojotaDerecha= new PrendaDerecha(desgaste=3,abrigo=3) 
	var ojotaIzquierda= new PrendaIzquierda(desgaste=1,abrigo=2) 
	//prenda par, la ojota izquierda tiene que tener 1 de desgaste y 2 de abrigo, la ojota derecha tiene 3 de desgaste y 3 de abrigo
    var ojotasMilena = new PrendasPares(talle=l,derecha=ojotaDerecha,izquierda=ojotaIzquierda) 
	
	//ninio
	var zoe = new NinioNoProblematico(talle=s, edad=11, prendas=#{mediasZoe, zapatillasZoe, jeanZoe, remeraZoe, camperaZoe }) 
	//ninio problematico
	var milena = new NinioProblematico(talle=xs, edad=2, prendas = #{remeraMilena, calzaMilena, ojotasMilena }, juguete=ukelele)
	
	//familia	
	var familiaAptaSalir = new Familia(ninios = #{ zoe})

	//familia	
	var familiaNoAptaParaSalir= new Familia(ninios = #{milena, zoe})
	
	
//PUNTO 1	
	test "comodidad" {
		
		assert.equals(6 ,mediasZoe.comodidad() )
		assert.equals(8 , zapatillasZoe.comodidad())
		assert.equals(8 ,jeanZoe.comodidad())
		assert.equals(10 ,remeraZoe.comodidad())
		assert.equals(8 , camperaZoe.comodidad())
		assert.equals(7 ,remeraMilena.comodidad())		
		assert.equals(10 ,calzaMilena.comodidad())
		assert.equals(-3 ,ojotasMilena.comodidad())
	}

//PUNTO 2		
	test "intercambiar pares ok" {
		var mediaIzq = mediasZoe.izquierdo()
		var mediaDer = mediasZoe.derecho()
		var zapaIzq = zapatillasZoe.izquierdo()
		var zapaDer = zapatillasZoe.derecho()
		
		mediasZoe.intercambiar(zapatillasZoe)

		assert.equals(mediaIzq, mediasZoe.izquierdo())
		assert.equals(mediaDer, zapatillasZoe.derecho())
		assert.equals(zapaIzq, zapatillasZoe.izquierdo())
		assert.equals(zapaDer, mediasZoe.derecho())
				
	}
	
	test "intercambiar pares no ok" {
		//TODO: Probar el error con un assert.throwsError
		var ojotaIzq = ojotasMilena.izquierdo()
		var ojotaDer= ojotasMilena.derecha()
		var mediaIzq = mediasZoe.izquierdo()
		var mediaDer = mediasZoe.derecho()
		ojotasMilena.intercambiar(mediasZoe)
		assert.equals(ojotaIzq,mediasZoe.izquierdo())
		assert.equals(ojotaDer,mediasZoe.derecha())
		assert.equals(mediaIzq,ojotasMilena.izquierdo())
		assert.equals(mediaDer,ojotasMilena.derecha())
		
	}

//PUNTO 3	
	test "nivel de abrigo" {
		assert.equals(2 ,mediasZoe.nivelDeAbrigo())
		assert.equals(2 ,zapatillasZoe.nivelDeAbrigo())
		assert.equals(5 ,jeanZoe.nivelDeAbrigo())
		assert.equals(1 ,remeraZoe.nivelDeAbrigo())
		assert.equals(3 ,camperaZoe.nivelDeAbrigo())
		assert.equals(1 ,remeraMilena.nivelDeAbrigo())		
		assert.equals(1 ,calzaMilena.nivelDeAbrigo())
		assert.equals(5 ,ojotasMilena.nivelDeAbrigo())
	}

//PUNTO 4		
	test "puede salir de paseo" {
		assert.that(familiaAptaSalir.puedePasear())
		assert.notThat(familiaNoAptaParaSalir.puedePasear())
	}
//PUNTO 5
	
	test "infaltables" {
		assert.equals(#{jeanZoe,calzaMilena}, familiaNoAptaParaSalir.infaltables())		
	}
	test "chiquitos" {
		assert.equals(#{milena}, familiaNoAptaParaSalir.chiquitos()
		)		
	}
	
//PUNTO 6	
test "salir de paseo ok" {
		familiaAptaSalir.pasear()
		assert.equals(1.8 , mediaIzquierda.desgaste())
		assert.equals(4.2 , mediaDerecha.desgaste())
		assert.equals(3 , mediasZoe.desgaste())
		assert.equals(1 , zapatillasZoe.desgaste())
		assert.equals(1 , jeanZoe.desgaste())
		assert.equals(1 , remeraZoe.desgaste())
		assert.equals(1 , camperaZoe.desgaste())
		
	}
//PUNTO 7	
	test "salir de paseo no ok" {
		assert.equals(3 , mediasZoe.desgaste())
		assert.equals(1 , zapatillasZoe.desgaste())
		assert.equals(1 , jeanZoe.desgaste())
		assert.equals(1 , remeraZoe.desgaste())
		assert.equals(1 , camperaZoe.desgaste())
		familiaNoAptaParaSalir.pasear()
	}
	
	
}

